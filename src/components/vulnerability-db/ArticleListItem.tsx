"use client";
import Image from "next/image";
import Chips from "./Chips";
import Link from "next/link";
import share from "/public/images/share.png";
import Clip from "../common/Clip";

/**
 * @description `ArticleListItem` 컴포넌트는 기사 목록을 아이템 형태로 표시합니다.
 * 각 아이템은 제목, 레이블, 회사명, 짧은 설명과 함께 핀 및 공유 버튼을 포함합니다.
 *
 * @returns {JSX.Element} 기사 목록 아이템을 표시하는 UI 컴포넌트를 반환합니다.
 */
type TArticleListItemProps = {
  id: string;
  title: string;
  subtitle: string;
  content: string;
  view: number;
};

function ArticleListItem({
  id,
  title,
  subtitle,
  content,
  view,
}: TArticleListItemProps): JSX.Element {
  const dateTimePart = subtitle.replace("게시일: ", "");

  /**
   * 기사의 링크를 공유하거나 클립보드에 복사하는 함수입니다.
   *
   * @param {number} id - 공유할 기사의 ID.
   */
  function handleShareLink(id: string) {
    const link = `${location.href}/${id}`;
    if (navigator.share) {
      navigator.share({ url: link });
    } else {
      navigator.clipboard.writeText(link);
      alert("링크가 복사되었습니다.");
    }
  }

  /**
   * 현재 날짜와 주어진 날짜 사이의 차이를 계산하여 상대적인 날짜 문자열을 반환하는 함수입니다.
   *
   * @param {string} date - 비교할 날짜 문자열.
   * @returns {string} 현재 날짜와 비교 날짜 사이의 차이를 나타내는 문자열.
   */
  const getDifferDate = (date: string): string => {
    let today = new Date();
    let differ = today.getTime() - new Date(date).getTime();
    let differDate = (differ / (24 * 60 * 60 * 1000)).toFixed();
    let differHour = (differ / (60 * 60 * 1000)).toFixed();
    let differMinutes = (differ / (60 * 1000)).toFixed();
    let differSeconds = (differ / 1000).toFixed();
    if (differDate === "0" && differMinutes === "0" && differHour === "0") {
      return `${differSeconds}초 전`;
    } else if (differDate === "0" && differHour === "0") {
      return `${differMinutes}분 전`;
    } else if (differDate === "0") {
      return `${differHour}시간 전`;
    }
    return `${differDate}일 전`;
  };

  return (
    <>
      <div className="flex h-[235px] flex-col gap-6 rounded-lg border border-neutral-20 p-7">
        <div className="flex flex-col gap-2">
          <div className="flex items-center gap-[5px]">
            <Chips view={view} subtitle={subtitle} />
            <Link href={`/vulnerability-db/${id}`}>
              <h3 className="line-clamp-1 text-[15px]">{title}</h3>
            </Link>
          </div>
          <span className="text-[13px] text-neutral-30">
            {title.includes("Microsoft")
              ? "Microsoft"
              : title.includes("Oracle")
                ? "Oracle"
                : "Other"}
          </span>
        </div>
        <div className="line-clamp-2 inline-block h-fit truncate rounded-xl bg-background-purpleLight px-3 py-2 text-center align-middle text-[13px] text-neutral-50 xl:py-3">
          {content.slice(6)}
        </div>
        <div className="flex justify-between">
          <div className="flex gap-3">
            <Clip id={id} />
            <button onClick={() => handleShareLink(id)}>
              <Image src={share} alt="share" width={20} height={20} />
            </button>
          </div>
          <span className="text-[13px] text-neutral-30">
            {getDifferDate(dateTimePart)}
          </span>
        </div>
      </div>
    </>
  );
}

export default ArticleListItem;
